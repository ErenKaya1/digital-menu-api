version: "3.7"

# Servislerin isimlerini değiştirmenize gerek yoktur.
# Projeyi local bilgisayarınızda çalıştıracaksanız 'api' servisindeki API_URL ve CLIENT_APP_URL ortam değişkenlerini düzenlemeniz gerekmektedir.
# API_URL değişkenine 'api' projesinin çalıştğı url i, CLIENT_APP_URL değişkenine ise Vue ile yazılmış 'client' uygulamasının çalıştığı url i yazmanız gerekmektedir. 
# Containerleri ayağa kaldırmadan önce ilgili portların boşta olduğundan emin olun.

services:
  # .NET 5.0 Backend Api
  api:
    # build:
    #   context: .
    #   dockerfile: Dockerfile
    image: erenkaya/digital-menu:api
    container_name: api
    ports:
      - 5001:80
    depends_on:
      - db
      - redis
      - rabbitmq
    restart: always
    environment:
      # production veya development
      ASPNETCORE_ENVIRONMENT: development

      # Zorunlu
      # Backend projesinin çalıştığı url.
      # Image adreslerinde kullanılıyor. Örn: https://localhost:5001/images/1.jpg
      API_URL: http://api.digitalmenu-iesu.tk

      # Zorunlu
      # Vue client uygulamasının çalıştığı url adresi.
      # CORS ayarlarında kullanılıyor.
      CLIENT_APP_URL: http://digitalmenu-iesu.tk

      # Opsiyonel
      # Varsayılan => Username=user;password=postgres;Database=digital_menu;host=localhost;port=5432;Pooling=True;
      # Connection String'deki host, 'db' servisinin adı ile aynı olmak zorundadır.
      # db servisindeki POSTGRES_USER ve POSTGRES_PASSWORD ortam değişkenleri ile Connection String'deki username ve password değerleri aynı olmak zorundadır. (Değiştirmezseniz zaten bu şekilde.)
      POSTGRESQL_CONNECTION_STRING: Username=user;password=postgres;Database=digital_menu;host=db;port=5432;Pooling=True;

      # Opsiyonel
      # Varsayılan => 127.0.0.1
      # 'redis' servis adı ile aynı değere sahip olmak zorundadır.
      REDIS_HOST: redis

      # Opsiyonel
      # Varsayılan => 6379
      # 'redis' servisindeki port ile aynı olmak zorundadır.
      REDIS_PORT: 6379

      # Opsiyonel
      # Varsayılan => localhost
      # 'rabbitmq' servis adı ile aynı olmak zorundadır.
      RABBITMQ_HOST: rabbitmq

      # Opsiyonel
      # Varsayılan => user
      # 'rabbitmq' servisindeki RABBITMQ_DEFAUT_USER ortam değişkeni ile aynı değere sahip olmak zorundadır.
      RABBITMQ_USERNAME: user

      # Opsiyonel
      # Varsayılan => password
      # 'rabbitmq' servisindeki RABBITMQ_DEFAUT_PASS ortam değişkeni ile aynı değere sahip olmak zorundadır.
      RABBITMQ_PASSWORD: password

  # Vue Client App
  client:
    image: erenkaya/digital-menu:client
    # ima+ge: erenkaya/digital-menu:client
    container_name: client
    depends_on:
      - api
    ports:
      - 80:8080
    restart: always

  # PostgreSQL Db
  db:
    image: postgres
    container_name: postgres
    ports:
      - 5432:5432
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: postgres
    volumes:
      - app-db:/var/lib/postgresql/data
    restart: always

  # Redis Cache
  redis:
    image: redis
    container_name: redis
    ports:
      - 6379:6379
    restart: always

  # RabbitMQ
  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    ports:
      - 15672:15672
      - 5672:5672
    environment:
      RABBITMQ_DEFAULT_USER: user
      RABBITMQ_DEFAULT_PASS: password
    restart: always

volumes:
  app-db:
